# Fig pre block. Keep at the top of this file.
[[ -f "$HOME/.fig/shell/zshrc.pre.zsh" ]] && builtin source "$HOME/.fig/shell/zshrc.pre.zsh"

## $PATH.
export PNPM_HOME="$HOME/Library/pnpm"
export PATH="$PNPM_HOME:$HOME/bin:/usr/local/bin:$PATH"

## zsh
# theme See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"

## plugins
plugins=(
  git
)

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"
source $ZSH/oh-my-zsh.sh

# git-prompt
source ~/.zsh/git-prompt.sh

# zsh-autosuggestions
source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh

# zsh-syntax-highlighting.zsh
source ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# tabtab source for packages
[[ -f ~/.zsh/tabtab/pnpm.zsh ]] && . ~/.zsh/tabtab/pnpm.zsh || true

# git-completion
fpath=(~/.zsh $fpath)
zstyle ':completion:*:*:git:*' script ~/.zsh/git-completion.bash
autoload -Uz compinit && compinit

# prompt options
GIT_PS1_SHOWDIRTYSTATE=true
GIT_PS1_SHOWUNTRACKEDFILES=true
GIT_PS1_SHOWSTASHSTATE=true
GIT_PS1_SHOWUPSTREAM=auto
# setopt PROMPT_SUBST ; PS1='%F{green}%n@%m%f: %F{cyan}%~%f %F{red}$(__git_ps1 "(%s)")%f\$ '

# history size
HISTSIZE=5000
HISTFILESIZE=10000

SAVEHIST=5000
setopt EXTENDED_HISTORY
HISTFILE=${ZDOTDIR:-$HOME}/.zsh_history
# share history across multiple zsh sessions
setopt SHARE_HISTORY
# append to history
setopt APPEND_HISTORY
# adds commands as they are typed, not at shell exit
setopt INC_APPEND_HISTORY
# do not store duplications
setopt HIST_IGNORE_DUPS

# system-wide environment settings for zsh(1)
if [ -x /usr/libexec/path_helper ]; then
    eval `/usr/libexec/path_helper -s`
fi

## alias
alias ll="ls -lah"
alias ..="cd ../"
alias ..l="cd ../ && ll"
alias dc="cd ~/Code"
alias ds="cd ~/Study"
alias rocaml="rlwrap ocaml"
alias n="pnpm"

alias ni="pnpm install"
alias nc="pnpm create"

function homestead() { cd ~/Vagrant/homestead && vagrant $* ;}
function cdl() { cd "$@" && ll; }
function killport() { lsof -i tcp:"$*" | awk 'NR!=1 {print $2}' | xargs kill -9 ;}
function pr() {
  if [ $1 = "ls" ]; then
    gh pr list
  else
    gh pr checkout $1
  fi
}


## GCP SDK
# The next line updates PATH for the Google Cloud SDK.
if [ -f '$HOME/Tools/google-cloud-sdk/path.zsh.inc' ]; then . '$HOME/Tools/google-cloud-sdk/path.zsh.inc'; fi
# The next line enables shell command completion for gcloud.
if [ -f '$HOME/Tools/google-cloud-sdk/completion.zsh.inc' ]; then . '$HOME/Tools/google-cloud-sdk/completion.zsh.inc'; fi

# enable fnm and corepack on cd
eval "$(fnm env --use-on-cd)"
eval "$(corepack enable)"

# rust
source ~/.cargo/env

## pyenv
if which pyenv > /dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

## Python
alias py="python $@"

# Fig post block. Keep at the bottom of this file.
[[ -f "$HOME/.fig/shell/zshrc.post.zsh" ]] && builtin source "$HOME/.fig/shell/zshrc.post.zsh"
